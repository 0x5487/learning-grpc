// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld/proto/helloworld.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{3, 0}
}

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{1}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{2}
}
func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (dst *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(dst, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=proto.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{3}
}
func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (dst *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(dst, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

// 請求數據 Request格式定義
type BidStreamRequest struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidStreamRequest) Reset()         { *m = BidStreamRequest{} }
func (m *BidStreamRequest) String() string { return proto.CompactTextString(m) }
func (*BidStreamRequest) ProtoMessage()    {}
func (*BidStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{4}
}
func (m *BidStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidStreamRequest.Unmarshal(m, b)
}
func (m *BidStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidStreamRequest.Marshal(b, m, deterministic)
}
func (dst *BidStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidStreamRequest.Merge(dst, src)
}
func (m *BidStreamRequest) XXX_Size() int {
	return xxx_messageInfo_BidStreamRequest.Size(m)
}
func (m *BidStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidStreamRequest proto.InternalMessageInfo

func (m *BidStreamRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

// 響應數據Response格式定義
type BidStreamReply struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidStreamReply) Reset()         { *m = BidStreamReply{} }
func (m *BidStreamReply) String() string { return proto.CompactTextString(m) }
func (*BidStreamReply) ProtoMessage()    {}
func (*BidStreamReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_helloworld_54041d9e4c5b6282, []int{5}
}
func (m *BidStreamReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidStreamReply.Unmarshal(m, b)
}
func (m *BidStreamReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidStreamReply.Marshal(b, m, deterministic)
}
func (dst *BidStreamReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidStreamReply.Merge(dst, src)
}
func (m *BidStreamReply) XXX_Size() int {
	return xxx_messageInfo_BidStreamReply.Size(m)
}
func (m *BidStreamReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BidStreamReply.DiscardUnknown(m)
}

var xxx_messageInfo_BidStreamReply proto.InternalMessageInfo

func (m *BidStreamReply) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "proto.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "proto.HelloReply")
	proto.RegisterType((*HealthCheckRequest)(nil), "proto.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "proto.HealthCheckResponse")
	proto.RegisterType((*BidStreamRequest)(nil), "proto.BidStreamRequest")
	proto.RegisterType((*BidStreamReply)(nil), "proto.BidStreamReply")
	proto.RegisterEnum("proto.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/proto.Greeter/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/proto.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Greeter_Check_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld/proto/helloworld.proto",
}

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	BidStream(ctx context.Context, opts ...grpc.CallOption) (Chat_BidStreamClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) BidStream(ctx context.Context, opts ...grpc.CallOption) (Chat_BidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/proto.Chat/BidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBidStreamClient{stream}
	return x, nil
}

type Chat_BidStreamClient interface {
	Send(*BidStreamRequest) error
	Recv() (*BidStreamReply, error)
	grpc.ClientStream
}

type chatBidStreamClient struct {
	grpc.ClientStream
}

func (x *chatBidStreamClient) Send(m *BidStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatBidStreamClient) Recv() (*BidStreamReply, error) {
	m := new(BidStreamReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	BidStream(Chat_BidStreamServer) error
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_BidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatServer).BidStream(&chatBidStreamServer{stream})
}

type Chat_BidStreamServer interface {
	Send(*BidStreamReply) error
	Recv() (*BidStreamRequest, error)
	grpc.ServerStream
}

type chatBidStreamServer struct {
	grpc.ServerStream
}

func (x *chatBidStreamServer) Send(m *BidStreamReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatBidStreamServer) Recv() (*BidStreamRequest, error) {
	m := new(BidStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BidStream",
			Handler:       _Chat_BidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "helloworld/proto/helloworld.proto",
}

func init() {
	proto.RegisterFile("helloworld/proto/helloworld.proto", fileDescriptor_helloworld_54041d9e4c5b6282)
}

var fileDescriptor_helloworld_54041d9e4c5b6282 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x4e, 0x83, 0x40,
	0x14, 0x85, 0xc5, 0xb4, 0xc5, 0xde, 0x6a, 0xad, 0xb7, 0xfe, 0x54, 0x56, 0x3a, 0x0b, 0xc3, 0x8a,
	0x1a, 0xdc, 0xb9, 0x50, 0x63, 0x63, 0x5a, 0x63, 0x42, 0x13, 0xf0, 0x67, 0x69, 0xc6, 0x76, 0x52,
	0x1a, 0xa7, 0x80, 0xcc, 0xa0, 0x61, 0xe1, 0x53, 0xf8, 0xc2, 0x86, 0x29, 0xb4, 0xa2, 0x75, 0x05,
	0xe7, 0x9c, 0xef, 0x0e, 0x73, 0xb8, 0x70, 0xec, 0x33, 0xce, 0xc3, 0x8f, 0x30, 0xe6, 0xe3, 0x6e,
	0x14, 0x87, 0x32, 0xec, 0x2e, 0x0d, 0x4b, 0x19, 0x58, 0x55, 0x0f, 0x42, 0x60, 0x73, 0x90, 0x45,
	0x2e, 0x7b, 0x4b, 0x98, 0x90, 0x88, 0x50, 0x09, 0xe8, 0x8c, 0x75, 0xb4, 0x23, 0xcd, 0xac, 0xbb,
	0xea, 0x9d, 0x9c, 0x00, 0xe4, 0x4c, 0xc4, 0x53, 0xec, 0x80, 0x3e, 0x63, 0x42, 0xd0, 0x49, 0x01,
	0x15, 0x92, 0x58, 0x80, 0x03, 0x46, 0xb9, 0xf4, 0x7b, 0x3e, 0x1b, 0xbd, 0x16, 0x27, 0x76, 0x40,
	0x17, 0x2c, 0x7e, 0x9f, 0x8e, 0x16, 0x7c, 0x2e, 0xc9, 0x97, 0x06, 0xed, 0xd2, 0x80, 0x88, 0xc2,
	0x40, 0x30, 0xbc, 0x82, 0x9a, 0x90, 0x54, 0x26, 0x42, 0x0d, 0x34, 0x6d, 0x73, 0x7e, 0x65, 0x6b,
	0x05, 0x6b, 0x79, 0xd9, 0x59, 0xc1, 0xc4, 0x53, 0xbc, 0x9b, 0xcf, 0x91, 0x73, 0xd8, 0x2a, 0x05,
	0xd8, 0x00, 0xfd, 0xc1, 0xb9, 0x73, 0x86, 0x4f, 0x4e, 0x6b, 0x2d, 0x13, 0xde, 0x8d, 0xfb, 0x78,
	0xeb, 0xf4, 0x5b, 0x1a, 0x6e, 0x43, 0xc3, 0x19, 0xde, 0x3f, 0x17, 0xc6, 0x3a, 0x31, 0xa1, 0x75,
	0x3d, 0x1d, 0x7b, 0x32, 0x66, 0x74, 0x56, 0x74, 0xd8, 0x85, 0xea, 0x34, 0x88, 0x12, 0x99, 0x37,
	0x98, 0x0b, 0x62, 0x42, 0xf3, 0x07, 0x99, 0xfd, 0x9b, 0x7d, 0xa8, 0x85, 0x89, 0x5c, 0x82, 0xb9,
	0xb2, 0x3f, 0x41, 0xef, 0xc7, 0x8c, 0x49, 0x16, 0xe3, 0x05, 0x54, 0x55, 0x03, 0x3c, 0x5c, 0xd5,
	0x4a, 0x7d, 0xce, 0x30, 0xfe, 0x2f, 0x8c, 0x36, 0x6c, 0x78, 0x34, 0x55, 0xfb, 0xc0, 0xf6, 0x82,
	0x5b, 0x6e, 0xd0, 0xd8, 0x29, 0x9b, 0x11, 0x4f, 0xed, 0x3e, 0x54, 0x7a, 0x3e, 0x95, 0x78, 0x09,
	0xf5, 0xc5, 0x85, 0xf1, 0x20, 0xe7, 0x7e, 0x97, 0x35, 0xf6, 0xfe, 0x06, 0x11, 0x4f, 0x4d, 0xed,
	0x54, 0x7b, 0xa9, 0xa9, 0xe4, 0xec, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x6d, 0xdf, 0x57, 0x60,
	0x02, 0x00, 0x00,
}
